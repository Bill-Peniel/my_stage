
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.UserProfileScalarFieldEnum = {
  userId: 'userId',
  nom: 'nom',
  prenom: 'prenom',
  telephone: 'telephone',
  photo: 'photo',
  adresse: 'adresse',
  autresInfos: 'autresInfos'
};

exports.Prisma.StructureScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  nomStructure: 'nomStructure',
  type: 'type',
  adresse: 'adresse',
  emailContact: 'emailContact',
  telephoneContact: 'telephoneContact'
};

exports.Prisma.TuteurScalarFieldEnum = {
  userId: 'userId',
  structureId: 'structureId',
  fonction: 'fonction',
  disponibilite: 'disponibilite',
  competences: 'competences'
};

exports.Prisma.StagiaireScalarFieldEnum = {
  userId: 'userId',
  codeDemande: 'codeDemande',
  statutDemande: 'statutDemande',
  structureAffecteeId: 'structureAffecteeId',
  tuteurId: 'tuteurId',
  dateDebut: 'dateDebut',
  dateFin: 'dateFin'
};

exports.Prisma.DPAFScalarFieldEnum = {
  userId: 'userId'
};

exports.Prisma.DemandeStageScalarFieldEnum = {
  id: 'id',
  stagiaireId: 'stagiaireId',
  dateDemande: 'dateDemande',
  etat: 'etat',
  motifRefus: 'motifRefus',
  dateTraitement: 'dateTraitement',
  structureCibleId: 'structureCibleId'
};

exports.Prisma.StageScalarFieldEnum = {
  id: 'id',
  stagiaireId: 'stagiaireId',
  tuteurId: 'tuteurId',
  structureId: 'structureId',
  theme: 'theme',
  etat: 'etat',
  dateDebut: 'dateDebut',
  dateFin: 'dateFin',
  noteFinale: 'noteFinale'
};

exports.Prisma.CandidatureScoreScalarFieldEnum = {
  id: 'id',
  stagiaireId: 'stagiaireId',
  scorePertinence: 'scorePertinence',
  dateEvaluation: 'dateEvaluation'
};

exports.Prisma.SuggestionAffectationScalarFieldEnum = {
  id: 'id',
  stagiaireId: 'stagiaireId',
  tuteurId: 'tuteurId',
  scoreMatch: 'scoreMatch',
  createdAt: 'createdAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  expediteurId: 'expediteurId',
  destinataireId: 'destinataireId',
  contenu: 'contenu',
  fichierJoint: 'fichierJoint',
  lu: 'lu',
  envoyeLe: 'envoyeLe'
};

exports.Prisma.ThemeTuteurScalarFieldEnum = {
  id: 'id',
  tuteurId: 'tuteurId',
  titre: 'titre',
  description: 'description',
  disponible: 'disponible'
};

exports.Prisma.ParametreSystemeScalarFieldEnum = {
  id: 'id',
  cle: 'cle',
  valeur: 'valeur'
};

exports.Prisma.JournalActionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  cible: 'cible',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  admin: 'admin',
  dpaf: 'dpaf',
  structure: 'structure',
  tuteur: 'tuteur',
  stagiaire: 'stagiaire'
};

exports.StatutDemande = exports.$Enums.StatutDemande = {
  en_attente: 'en_attente',
  confirmé: 'confirmé',
  rejeté: 'rejeté'
};

exports.EtatDemande = exports.$Enums.EtatDemande = {
  en_attente: 'en_attente',
  validée_par_dpaf: 'validée_par_dpaf',
  envoyée_structure: 'envoyée_structure',
  refusée: 'refusée'
};

exports.EtatStage = exports.$Enums.EtatStage = {
  en_cours: 'en_cours',
  terminé: 'terminé',
  abandonné: 'abandonné'
};

exports.Prisma.ModelName = {
  User: 'User',
  UserProfile: 'UserProfile',
  Structure: 'Structure',
  Tuteur: 'Tuteur',
  Stagiaire: 'Stagiaire',
  DPAF: 'DPAF',
  DemandeStage: 'DemandeStage',
  Stage: 'Stage',
  CandidatureScore: 'CandidatureScore',
  SuggestionAffectation: 'SuggestionAffectation',
  Message: 'Message',
  ThemeTuteur: 'ThemeTuteur',
  ParametreSysteme: 'ParametreSysteme',
  JournalAction: 'JournalAction'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
